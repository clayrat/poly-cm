{-# OPTIONS --safe #-}
module Polynomial where

open import Prelude

record Polynomial (โแต โแต : Level) : ๐ฐ (โsuc (โแต โ โแต)) where
    constructor mkpoly
    field
      pos : ๐ฐ โแต
      dir : pos โ ๐ฐ โแต

open Polynomial public

private variable
  โแต โแต โแต โแต : Level

๐ : Polynomial โแต โแต
๐ = mkpoly โฅ ฮป ()

๐ : Polynomial โแต โแต
๐ = mkpoly โค (ฮป _ โ โฅ)

Y : Polynomial โแต โแต
Y = mkpoly โค (ฮป _ โ โค)

-- | p(y) = A*y^B
monomial : (A : ๐ฐ โแต) (B : ๐ฐ โแต) โ Polynomial โแต โแต
monomial A B = mkpoly A (ฮป _ โ B)

_y^_ = monomial
infix 50 _y^_

-- | p(y) = A
constant : (A : ๐ฐ โแต) โ Polynomial โแต โแต
constant A = monomial A โฅ

-- | p(y) = S*y^S
self-monomial : ๐ฐ โแต โ Polynomial โแต โแต
self-monomial S = monomial S S

-- | p(y) = y^S
pure-power : ๐ฐ โแต โ Polynomial โแต โแต
pure-power power = monomial โค power

representable = pure-power

-- | p(y) = A*y
linear : ๐ฐ โแต โ Polynomial โแต โแต
linear A = monomial A โค

-- application

_โฆ_โฆ : {โ : Level} โ Polynomial โแต โแต โ ๐ฐ โ โ ๐ฐ (โแต โ โแต โ โ)
mkpoly p d โฆ Y โฆ = ฮฃ[ x ๊ p ] (d x โ Y)
infixl 30 _โฆ_โฆ

ap-poly : {โแต โแต : Level} {A : ๐ฐ โแต} {B : ๐ฐ โแต}
        โ (p : Polynomial โแต โแต) โ (A โ B) โ p โฆ A โฆ โ p โฆ B โฆ
ap-poly (mkpoly p d) f (x , g) = x , f โ g
